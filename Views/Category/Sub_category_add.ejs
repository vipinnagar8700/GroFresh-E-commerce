
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="csrf-token" content="j6j4MEYno5qh0sfU0PeYC2ZvCkfaT6RKZf16l3Wd">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Add new sub category</title>
        <link rel="icon" type="image/x-icon" href="https://grofresh-admin.6amtech.com/storage/app/public/restaurant/2023-11-21-655c75526b81b.png">
        <link rel="shortcut icon" href>
        <link rel="stylesheet" href="https://grofresh-admin.6amtech.com/public/assets/admin/css/vendor.min.css">
        <link rel="stylesheet" href="https://grofresh-admin.6amtech.com/public/assets/admin/vendor/icon-set/style.css">
        <link rel="stylesheet" href="https://grofresh-admin.6amtech.com/public/assets/admin/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://grofresh-admin.6amtech.com/public/assets/admin/css/owl.min.css">
        <link rel="stylesheet" href="https://grofresh-admin.6amtech.com/public/assets/admin/css/theme.minc619.css?v=1.0">
        <link rel="stylesheet" href="https://grofresh-admin.6amtech.com/public/assets/admin/css/style.css">
        <meta name="csrf-token" content="j6j4MEYno5qh0sfU0PeYC2ZvCkfaT6RKZf16l3Wd">
        <script src="https://grofresh-admin.6amtech.com/public/assets/admin/vendor/hs-navbar-vertical-aside/hs-navbar-vertical-aside-mini-cache.js"></script>
        <link rel="stylesheet" href="https://grofresh-admin.6amtech.com/public/assets/admin/css/toastr.css">
        <link rel="stylesheet" href="https://grofresh-admin.6amtech.com/public/assets/admin/css/custom-helper.css">
    </head>
    <body class="footer-offset" id="demo">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="d-none" id="loading">
                        <div class="loader-image">
                            <img width="200" src="https://grofresh-admin.6amtech.com/public/assets/admin/img/loader.gif">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <%- include('../Layout/Header') %>
        <div id="headerFluid" class="d-none"></div>
        <div id="headerDouble" class="d-none"></div>
        <%- include('../Layout/Sidebar') %>
        <main id="content" role="main" class="main pointer-event">
            <div class="content container-fluid">
                <div class="page-header">
                    <h1 class="page-header-title">
                        <span class="page-header-icon">
                            <img src="https://grofresh-admin.6amtech.com/public/assets/admin/img/category.png" class="w--24" alt="Category">
                        </span>
                        <span>
                            Sub category setup
                        </span>
                    </h1>
                </div>
                <div class="row gx-2 gx-lg-3">
                    <div class="col-sm-12 col-lg-12 mb-3 mb-lg-2">
                        <div class="card">
                            <div class="card-body">
                                <form action="https://grofresh-admin.6amtech.com/admin/category/store" method="post">
                                    <ul class="nav nav-tabs mb-4 d-inline-flex">
                                        <li class="nav-item">
                                            <a class="nav-link lang_link active" href="#" id="en-link">English(EN)</a>
                                        </li>
                                      
                                    </ul>
                                    <div class="row">
                                        <div class="col-sm-6 lang_form" id="en-form">
                                            <label class="form-label" for="exampleFormControlInput1">Sub category Name (EN)</label>
                                            <input type="text" name="name[]" class="form-control" maxlength="255" placeholder="New Sub Category" required oninvalid="document.getElementById('en-link').click()">
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="form-label" for="exampleFormControlSelect1">Main Category
                                                    <span class="input-label-secondary">*</span>
                                                </label>
                                                <select id="exampleFormControlSelect1" name="parent_id" class="form-control" required>
                                                    <!-- Options will be dynamically populated here -->
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="btn--container justify-content-end">
                                                <a href="#" class="btn btn--reset min-w-120px">Reset</a>
                                                <button type="submit" class="btn btn--primary">Submit</button>
                                            </div>
                                        </div>
                                    </div>
                                    
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-lg-12 mb-3 mb-lg-2">
                        <div class="card">
                            <div class="card-header border-0">
                                <div class="card--header">
                                    <h5 class="card-title">Sub Category Table <span id="categoryCount" class="badge badge-soft-secondary">15</span> </h5>

                                    <form id="searchForm" action="/admin/category/add-sub-category" method="GET">
                                        <div class="input-group">
                                            <input id="datatableSearch_" type="search" name="search" class="form-control pl-5" placeholder="Search by Name" aria-label="Search" required autocomplete="off">
                                            <i class="tio-search tio-input-search"></i>
                                            <div class="input-group-append">
                                                <button type="submit" class="input-group-text">
                                                    Search
                                                </button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <div class="table-responsive datatable-custom">
                                <table class="table table-borderless table-thead-bordered table-nowrap table-align-middle card-table">
                                    <thead class="thead-light">
                                        <tr>
                                            <th class="text-center">SL</th>
                                            <th>Main Category</th>
                                            <th>Sub category</th>
                                            <th>Status</th>
                                            <th class="text-center">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="set-rows">
                                       
                                       
                                    </tbody>
                                </table>
                                <div class="page-area">
                                    <table>
                                        <tfoot>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <%- include('../Layout/Footer') %>
            <div class="modal fade" id="popup-modal">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-12">
                                    <div class="text-center">
                                        <h2 class="order-check-colour">
                                            <i class="tio-shopping-cart-outlined"></i> You have new order Check Please.
                                        </h2>
                                        <hr>
                                        <button id="check-order" class="btn btn-primary">Ok let me check</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
        <script>
            document.getElementById('searchForm').addEventListener('submit', function (event) {
                event.preventDefault(); // Prevent the default form submission
                const searchText = document.getElementById('datatableSearch_').value.trim(); // Get the search text
                fetchData(searchText); // Call the fetch function with search text
            });
        
            function fetchData(searchText = '') {
                const myHeaders = new Headers();
        
                const requestOptions = {
                    method: "GET",
                    headers: myHeaders,
                    redirect: "follow"
                };
        
                fetch("/api/v1/allProductSubCategories", requestOptions)
                    .then((response) => response.json())
                    .then((data) => {
                        const setRows = document.getElementById('set-rows');
                        setRows.innerHTML = ""; // Clear existing rows before appending new ones
                        const filteredCategories = data.filter(category => {
                            // Assuming you want to filter based on category name
                            return category.SubCategory_name.toLowerCase().includes(searchText.toLowerCase()) || 
           category.Main_Category.Category_name.toLowerCase().includes(searchText.toLowerCase());
                        });
                        console.log(filteredCategories, "filteredCategories");
                        filteredCategories.forEach((category, index) => {
                            const row = `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${category?.Main_Category?.Category_name}</td>
                                    <td>${category?.SubCategory_name}</td>
                                    <td>
                                        <label class="toggle-switch">
                                            <input type="checkbox" class="toggle-switch-input status-change-alert"
                                                data-id="${category._id}"
                                                data-message="You want to ${category.status === 'active' ? 'disable' : 'enable'} this category"
                                                ${category.status === 'active' ? 'checked' : ''}>
                                            <span class="toggle-switch-label text">
                                                <span class="toggle-switch-indicator"></span>
                                            </span>
                                        </label>
                                    </td>
                                    <td>
                                        <div class="btn--container justify-content-center">
                                            <a class="action-btn" href="/admin/category/edit-sub/${category?._id}">
                                                <i class="tio-edit"></i>
                                            </a>
                                            <a class="action-btn btn--danger btn-outline-danger form-alert"
                                                href="javascript:" data-id="${category._id}" data-message="Want to delete this?">
                                                <i class="tio-delete-outlined"></i>
                                            </a>
                                        </div>
                                        <form action="${category?.deleteLink}" method="post" id="category-${category._id}">
                                            <input type="hidden" name="_token" value="${category.csrfToken}" autocomplete="off">
                                            <input type="hidden" name="_method" value="delete">
                                        </form>
                                    </td>
                                </tr>
                            `;
                            setRows.insertAdjacentHTML('beforeend', row);
                        });
                        document.getElementById('categoryCount').innerText = filteredCategories.length;
        
                        // Attach event listeners to delete buttons
                        const deleteButtons = document.querySelectorAll('.form-alert');
                        deleteButtons.forEach(button => {
                            button.addEventListener('click', function (event) {
                                event.preventDefault(); // Prevent the default action of the anchor tag
                                const categoryId = button.dataset.id;
                                const confirmationMessage = button.dataset.message;
                                if (confirm(confirmationMessage)) {
                                    deleteCategory(categoryId);
                                }
                            });
                        });
        
                        // Attach event listeners to status change buttons
                        const StatusButtons = document.querySelectorAll('.status-change-alert');
                        StatusButtons.forEach(button => {
                            button.addEventListener('click', function (event) {
                                event.preventDefault(); // Prevent the default action
                                const categoryId = button.dataset.id;
                                const message = button.dataset.message;
                                if (confirm(message)) {
                                    fetch(`/api/v1/updateSubProductCategoryStatus/${categoryId}`, {
                                        method: 'PUT',
                                        headers: { 'Content-Type': 'application/json' },
                                    })
                                        .then(response => {
                                            if (!response.ok) {
                                                throw new Error('Failed to update category status');
                                            }
                                            return response.json();
                                        })
                                        .then(result => {
                                            console.log(result);
                                            toastr.success(result?.message);
                                            fetchData();
                                        })
                                        .catch(error => {
                                            console.error('Error:', error);
                                            toastr.error('Error occurred while updating category status.');
                                        });
                                }
                            });
                        });
                    })
                    .catch((error) => console.error(error));
            }
        
            function deleteCategory(categoryId) {
                const myHeaders = new Headers();
                myHeaders.append("Content-Type", "application/json");
        
                const requestOptions = {
                    method: "DELETE",
                    headers: myHeaders,
                    redirect: "follow"
                };
        
                fetch(`/api/v1/deleteProductSubCategory/${categoryId}`, requestOptions)
                    .then((response) => response.json())
                    .then((result) => {
                        toastr.success(result?.message);
                        fetchData();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        toastr.error('Error occurred while deleting Product Category.');
                    });
            }
        
            document.addEventListener('DOMContentLoaded', function () {
                const myHeaders = new Headers();
                myHeaders.append("Content-Type", "application/json");
        
                const requestOptions = {
                    method: "GET",
                    headers: myHeaders,
                    redirect: "follow"
                };
        
                // Fetch main category data and populate the select options
                fetch("/api/v1/categories", requestOptions)
                    .then((response) => response.json())
                    .then((data) => {
                        const selectElement = document.getElementById('exampleFormControlSelect1');
                        data.forEach((category) => {
                            const option = document.createElement('option');
                            option.value = category._id;
                            option.text = category.Category_name;
                            selectElement.appendChild(option);
                        });
                    })
                    .catch((error) => console.error(error));
        
                // Submit form on button click
                const submitButton = document.querySelector('.btn--primary');
                submitButton.addEventListener('click', function (event) {
                    event.preventDefault();
                    const subCategoryName = document.querySelector('input[name="name[]"]').value;
                    const mainCategoryId = document.querySelector('#exampleFormControlSelect1').value;
                    const raw = JSON.stringify({
                        "SubCategory_name": subCategoryName,
                        "Main_Category": mainCategoryId
                    });
                    const requestOptions = {
                        method: "POST",
                        headers: myHeaders,
                        body: raw,
                        redirect: "follow"
                    };
                    fetch("/api/v1/createProductSubCategory", requestOptions)
                        .then((response) => response.json())
                        .then((result) => {
                            toastr.success(result.message);
                            fetchData();
                        })
                        .catch((error) => {
                            toastr.error(error.message);
                        });
                });
            });
        
            // Call fetchData() when the document is loaded to populate the table initially
            document.addEventListener('DOMContentLoaded', () => fetchData());
        </script>
        
       
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script
            src="https://grofresh-admin.6amtech.com/public/assets/admin/js/custom.js"></script>
        <script src="https://grofresh-admin.6amtech.com/public/assets/admin/js/vendor.min.js"></script>
        <script src="https://grofresh-admin.6amtech.com/public/assets/admin/js/theme.min.js"></script>
        <script src="https://grofresh-admin.6amtech.com/public/assets/admin/js/sweet_alert.js"></script>
        <script src="https://grofresh-admin.6amtech.com/public/assets/admin/js/toastr.js"></script>
        <script src="https://grofresh-admin.6amtech.com/public/assets/admin/js/owl.min.js"></script>
        <script type="text/javascript"></script>
        <script>
    $(document).on('ready', function () {
        var sidebar = $('.js-navbar-vertical-aside').hsSideNav();

        $('.js-nav-tooltip-link').tooltip({boundary: 'window'})

        $(".js-nav-tooltip-link").on("show.bs.tooltip", function (e) {
            if (!$("body").hasClass("navbar-vertical-aside-mini-mode")) {
                return false;
            }
        });

        $('.js-hs-unfold-invoker').each(function () {
            var unfold = new HSUnfold($(this)).init();
        });

        $('.js-form-search').each(function () {
            new HSFormSearch($(this)).init()
        });

        $('.js-select2-custom').each(function () {
            var select2 = $.HSCore.components.HSSelect2.init($(this));
        });

        $('.js-daterangepicker').daterangepicker();

        $('.js-daterangepicker-times').daterangepicker({
            timePicker: true,
            startDate: moment().startOf('hour'),
            endDate: moment().startOf('hour').add(32, 'hour'),
            locale: {
                format: 'M/DD hh:mm A'
            }
        });
    });
</script>
        <script>
        $(".lang_link").click(function(e){
            e.preventDefault();
            $(".lang_link").removeClass('active');
            $(".lang_form").addClass('d-none');
            $(this).addClass('active');

            let form_id = this.id;
            let lang = form_id.split("-")[0];
            console.log(lang);
            $("#"+lang+"-form").removeClass('d-none');
            if(lang == 'en')
            {
                $(".from_part_2").removeClass('d-none');
            }
            else
            {
                $(".from_part_2").addClass('d-none');
            }
        });
    </script>
        <script>
        $(window).on('load', function () {
            if ($(".navbar-vertical-content li.active").length) {
                $('.navbar-vertical-content').animate({
                    scrollTop: $(".navbar-vertical-content li.active").offset().top - 150
                }, 10);
            }
        });

        var $rows = $('#navbar-vertical-content .navbar-nav > li');
        $('#search-sidebar-menu').keyup(function () {
            var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();

            $rows.show().filter(function () {
                var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                return !~text.indexOf(val);
            }).hide();
        });
    </script>
        <audio id="myAudio">
            <source src="https://grofresh-admin.6amtech.com/public/assets/admin/sound/notification.mp3" type="audio/mpeg">
        </audio>
        <script>
    var audio = document.getElementById("myAudio");

    function playAudio() {
        audio.play();
    }

    function pauseAudio() {
        audio.pause();
    }
</script>
        <script>
    $('#check-order').on('click', function(){
        location.href = 'https://grofresh-admin.6amtech.com/admin/order/list/all';
    })

            setInterval(function () {
            $.get({
                url: 'https://grofresh-admin.6amtech.com/admin/get-restaurant-data',
                dataType: 'json',
                success: function (response) {
                    let data = response.data;
                    if (data.new_order > 0) {
                        playAudio();
                        $('#popup-modal').appendTo("body").modal('show');
                    }
                },
            });
        }, 10000);
    
    function route_alert(route, message) {
        Swal.fire({
            title: 'Are you sure ',
            text: message,
            type: 'warning',
            showCancelButton: true,
            cancelButtonColor: 'default',
            confirmButtonColor: '#01684b',
            cancelButtonText: 'No',
            confirmButtonText: 'Yes',
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                location.href = route;
            }
        })
    }

    $('.form-alert').on('click', function (){
        let id = $(this).data('id');
        let message = $(this).data('message');
        form_alert(id, message)
    });

    function form_alert(id, message) {
        Swal.fire({
            title: 'Are you sure ',
            text: message,
            type: 'warning',
            showCancelButton: true,
            cancelButtonColor: 'default',
            confirmButtonColor: '#01684b',
            cancelButtonText: 'No',
            confirmButtonText: 'Yes',
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                $('#'+id).submit()
            }
        })
    }

    function call_demo(){
        toastr.info('Disabled for demo version!')
    }

    $('.call-demo').click(function() {
        if ('demo' === 'demo') {
            call_demo();
        }
    });
</script>
        <script>

    $('.status-change-alert').on('click', function (){
        let url = $(this).data('route');
        let message = $(this).data('message');
        status_change_alert(url, message, event)
    });

    function status_change_alert(url, message, e) {
        e.preventDefault();
        Swal.fire({
            title: 'Are you sure ',
            text: message,
            type: 'warning',
            showCancelButton: true,
            cancelButtonColor: 'default',
            confirmButtonColor: '#107980',
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                location.href = url;
            }
        })
    }
</script>
        <script>
    var initialImages = [];
    $(window).on('load', function() {
        $("form").find('img').each(function (index, value) {
            initialImages.push(value.src);
        })
    })

    $(document).ready(function() {
        $('form').on('reset', function(e) {
            $("form").find('img').each(function (index, value) {
                $(value).attr('src', initialImages[index]);
            })
        });
    });
</script>
        <script>
    $(function(){
        var owl = $('.single-item-slider');
        owl.owlCarousel({
            autoplay: false,
            items:1,
            onInitialized  : counter,
            onTranslated : counter,
            autoHeight: true,
            dots: true,
        });

        function counter(event) {
            var element   = event.target;         // DOM element, in this example .owl-carousel
            var items     = event.item.count;     // Number of items
            var item      = event.item.index + 1;     // Position of the current item

            if(item > items) {
                item = item - items
            }
            $('.slide-counter').html(+item+"/"+items)
        }
    });
</script>
        <script>
    document.addEventListener('DOMContentLoaded', function () {
        replaceEmailsAndPhoneNumbersWithAsterisks(document.getElementById('demo'));

        // Disable mailto links
        document.querySelectorAll('a[href^="mailto:"]').forEach(function(link) {
            link.addEventListener('click', function(event) {
                event.preventDefault();
            });
        });
        // Disable tel links
        document.querySelectorAll('a[href^="tel:"]').forEach(function(link) {
            link.addEventListener('click', function(event) {
                event.preventDefault();
            });
        });
    });

    function replaceEmailsAndPhoneNumbersWithAsterisks(element) {
        if (element.nodeType === 3) { // Text node
            // Use regular expressions to match email and phone number patterns
            element.nodeValue = element.nodeValue
                .replace(/\b([A-Za-z0-9._%+-])[^@]*@([A-Za-z0-9.-]+)\.([A-Z|a-z]{2,})\b/g, function (match, firstLetter, domain, tld) {
                    var remainingAsterisks = '*'.repeat(Math.min(10, match.length - 1));
                    return firstLetter + remainingAsterisks + '@' + domain + '.' + tld;
                })
                .replace(/\b(?:\+\d{1,3}\s?)?\d{1,4}[-.\s]?\d{5,}\b/g, function (match) {
                    if (match.length >= 8) {
                        var firstChar = match.charAt(0) === '+' ? '+' : match.charAt(0);
                        var remainingAsterisks = '*'.repeat(Math.min(10, match.length - (firstChar === '+' ? 2 : 1)));
                        return firstChar + remainingAsterisks;
                    } else {
                        return match;  // Don't replace if the length is less than 10
                    }
                });
        } else if (element.nodeType === 1) { // Element node
            for (var i = 0; i < element.childNodes.length; i++) {
                replaceEmailsAndPhoneNumbersWithAsterisks(element.childNodes[i]);
            }
        }
    }
</script>

        <script>
    if (/MSIE \d|Trident.*rv:/.test(navigator.userAgent)) document.write('<script src="https://grofresh-admin.6amtech.com/public/assets/admin/vendor/babel-polyfill/polyfill.min.js"><\/script>');
</script>
    </body>
</html>
